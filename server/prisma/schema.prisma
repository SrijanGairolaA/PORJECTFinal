// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender{
  male
  female
  transgender
}

model User{
  id Int @id @default(autoincrement())
  name String @db.VarChar(191)
  email String @unique
  password String
  userDemograph UserDemographic? 
  post Post[]
  password_reset_token String?
  token_send_at DateTime?
  refreshToken String?
  refresh_created_at DateTime?
  // email_verified_at DateTime?
  // email_verify_token String?
}

model UserDemographic{
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int @unique
  gender Gender
  age Int
  religion String
  nationality String
  state String
  votedOPtions PostOptions[] @relation("Votes")
}


model Post{
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  options PostOptions[]
  content String
  video String?
  img String?

}

model PostOptions{
  id Int @id @default(autoincrement())
  post Post @relation(fields: [postId], references: [id])
  postId Int
  usersVoted UserDemographic[] @relation("Votes")
  option String
  voteCount Int @default(0)
}